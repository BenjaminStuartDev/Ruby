Using methods
Methods are a huge part of programming and we'll be using them all the time! Methods are very powerful, and can do things such as manipulate input, return values, or output to the terminal. 

1. Write a method called print_greeting that takes in a name as string and outputs a greeting.

     E.g. print_greeting("Josh") should output "Hi, my name is Josh"

2. Methods can also return values. Write a method called add_three that takes in a number as an argument and adds 3 to it and returns the result. 

     E.g. add_three(2) should return 5

     E.g. add_three(-2) should return 1

3. Methods can also return multiple values! Write a method called get_last_two_names that takes in an array of names and returns the last two names in the array. You can assume the array passed will have at least two names in it. 

    E.g. get_last_two_names(["sara", "james", "martha", "charlie"]) should return "martha", "charlie"

    E.g.  get_last_two_names(["sara", "james"]) should return "sara", "james"

Question: What kind of data type is Ruby returning when you return more than one value from a method? 

-------------------------------------------------------------------

Array Sum with Methods
Part 1
Remember the sum arrays challenge from last week? Today we will rewrite our code using methods! Methods are a great way to group together and reuse lines of code in our programs.

Write a method called sum_array that takes in an array of numbers as an argument and returns the sum.

E.g. sum_array([10, 20, -10, 5, 0]) should return 25

E.g. sum_array([3]) should return 3

E.g. sum_array([]) should return 0

Part 2
Write a method called sum_two_arrays that takes in two arrays of numbers and returns the sum of the two arrays. Hint: You should use your sum_array method from Part 1 to help you write this method!

E.g. sum_two_arrays([10, 20, -10, 5, 0], [5, 3, -2]) should return 31

E.g. sum_two_arrays([10, 20, -10, 5, 0], [2]) should return 27

E.g. sum_two_arrays([3, 4, -9], []) should return -2